===========================
How to use 0-add_integer.py
============================

module that adds two integers using the function:
def add_integer(a, b=98):

===========================
	usage
============================

returns the addition of two integers with the operator '+'

1. working with integers
::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2,3)
	5

	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(5,-3)
	-4
::

2. working with floats
::
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(2.5,9.0)
	11
::

3. working with non-numbers
	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer(5,"dada")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/data/data/com.termux/files/home/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("b must be an integer")
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: b must be an integer


	>>> add_integer = __import__('0-add_integer').add_integer
	>>> add_integer("hello",90)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/data/data/com.termux/files/home/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer
>>>
